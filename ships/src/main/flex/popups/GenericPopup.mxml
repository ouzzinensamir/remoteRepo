<s:TitleWindow  xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				close="close(event)"
				cornerRadius="15"
				controlBarVisible="true"
				width="400"
				height="400"
				title="Créer un Composant Passif"
				creationComplete="init()">
	<fx:Script>
		<![CDATA[
			import component.passifs.dto.TypesPassifComponent;
		]]>
	</fx:Script>
	<s:states> 
		<s:State name="DEFAULT"/> 
		<s:State name="ROUTE"/> 
		<s:State name="RAIL"/>
		<s:State name="SPACE"/>
		<s:State name="ELECTRIC_PYLON"/>
		<s:State name="NICHE_REEFER"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import component.AbstractComponent;
			import org.rockholla.controls.panzoom.PanZoomContent;
			
			import mx.managers.PopUpManager;
			[Bindable]
			public var terminal:PanZoomContent;
			
			protected var currentComponent:AbstractComponent;
			
			[Bindable]
			public var definedX:int;
			[Bindable]
			public var definedY:int;
			
			private function init():void{
				PopUpManager.centerPopUp(this);
			}
			protected function addNewComponent(event:MouseEvent):void{
				removeExistingComponent();
				close(event);
			}
			
			private function removeExistingComponent():void{
				if(currentComponent!= null){
					terminal.removeChild(currentComponent);
				}
			}
			
			protected function calcultateComponentWith():int{
				var firstPoint:Point=new Point(x1Value,y1Value);
				var secandPoint:Point=new Point(x2Value,y2Value);
				return Point.distance(firstPoint,secandPoint);
			}
			public function close(event:Event):void{
				currentComponent = null;
				PopUpManager.removePopUp(this);
			}
			
			protected function get x1Value():Number{
				return Number(x1Text.text);
			}
			protected function get y1Value():Number{
				return Number(y1Text.text);
			}
			protected function get x2Value():Number{
				return Number(x2Text.text);
			}
			protected function get y2Value():Number{
				return Number(y2Text.text);
			}
			protected function get angle():Number{
				return angleValue.text!=null ? Number(angleValue.text) : 0;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
	</fx:Declarations>
	
	<s:HGroup width="100%" height="100%">
			<mx:VBox id="container" width="100%" height="100%" paddingTop="20" verticalAlign="middle" horizontalAlign="left">
				<mx:HBox paddingLeft="20" horizontalAlign="left">
					 <s:TabBar dataProvider="{cafeTownSendContent}"/>
				</mx:HBox>
					<mx:ViewStack id="cafeTownSendContent" resizeToContent="true" width="100%" height="80%" >
							<s:NavigatorContent id="general" label="Géneral" width="100%" height="100%">
									<mx:Form id="form">
										<mx:FormItem styleName="label" label="Code :" required="true" id="codeComp">
											<s:TextInput id="codeCompValue"/>
										</mx:FormItem>
										<mx:FormItem styleName="label" label="Libellé :" required="true" id="libelleComp">
											<s:TextInput id="libelleCompValue"/>
										</mx:FormItem>
										<mx:FormItem styleName="label" label="Type :" required="true" id="typeComp">
											<s:TextInput id="typeCompValue"/>
										</mx:FormItem>
										<mx:FormItem styleName="label" label="Coordonnées :" required="false" id="coordonnes">
											<mx:HBox>
												<mx:VBox>
													<mx:FormItem styleName="label" label="X1 :" required="true" id="x1">
														<s:TextInput id="x1Text" text="{definedX}" enabled="false" width="50"/>
													</mx:FormItem>
													<mx:FormItem styleName="label" label="Y1 :" required="true" id="y1" >
														<s:TextInput id="y1Text" text="{definedY}"  enabled="false" width="50"/>
													</mx:FormItem>
												</mx:VBox>
												<mx:VBox includeIn="ROUTE,RAIL,SPACE,NICHE_REEFER">
													<mx:FormItem styleName="label" label="X2 :" required="true" id="x2" >
														<s:TextInput id="x2Text" width="50"/>
													</mx:FormItem>
													<mx:FormItem styleName="label" label="Y2 :" required="true" id="y2" >
														<s:TextInput id="y2Text" width="50"/>
													</mx:FormItem>
												</mx:VBox>
											</mx:HBox>
										</mx:FormItem>
										<mx:FormItem styleName="label" label="Label :" required="false" includeIn="SPACE">
											<s:TextInput id="componentLabel"/>
										</mx:FormItem>
										<mx:FormItem styleName="label" label="height :" required="true" includeIn="SPACE,NICHE_REEFER" >
											<s:TextInput id="heightComp" text.NICHE_REEFER="15"/>
										</mx:FormItem>
										<mx:FormItem styleName="label" label="Orientation :" required="true" includeIn="NICHE_REEFER" >
											<s:DropDownList id="deviation" selectedIndex="0"> 
												<mx:ArrayCollection>
													<fx:String>Haut</fx:String>
													<fx:String>Bas</fx:String>
												</mx:ArrayCollection>
											</s:DropDownList>
										</mx:FormItem>
										<mx:FormItem styleName="label" label="Raduis :" required="true" id="raduisLabel" includeIn="ELECTRIC_PYLON">
											<s:TextInput id="raduisValue" text="5"/>
										</mx:FormItem>
										<mx:FormItem styleName="label" label="Angle :" required="true" id="angleLabel">
											<s:TextInput id="angleValue" text=""/>
										</mx:FormItem>
										<mx:FormItem styleName="label" label="Couleur :" required="true" id="colorLabel">
											<mx:ColorPicker id="colorValue"/>
										</mx:FormItem>
									</mx:Form>
						</s:NavigatorContent >
						
						<s:NavigatorContent id="parametre" label="Paramétres" width="100%" height="100%">
							
						</s:NavigatorContent>
					</mx:ViewStack>
				<!-- Button -->
				<mx:HBox  id="button"  width="90%" height="20%" verticalAlign="middle" horizontalAlign="right">
					<s:Button id="ko" width="100"  cornerRadius="10" skinClass="skins.ButtonSkin" label="Close" click="close(event)"/>
					<s:Button id="ok" width="100" cornerRadius="10" skinClass="skins.ButtonSkin" label="Add" click="addNewComponent(event)" />
				</mx:HBox>
			</mx:VBox>
	</s:HGroup>
</s:TitleWindow>
